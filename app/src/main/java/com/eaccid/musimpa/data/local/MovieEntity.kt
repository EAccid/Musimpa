package com.eaccid.musimpa.data.local

import androidx.room.Entity
import androidx.room.PrimaryKey

@Entity
data class MovieEntity(
    
    // delete this if pagination information in a separate table
    @PrimaryKey(autoGenerate = true) val localId: Int = 0,
    // this is just to see how pager works
    // pagination would work better with separate table according to the documentation
    var page: Int = 0,

    val apiId: Int = 0,
    val originalTitle: String? = null,
    val releaseDate: String? = null,
    val posterPath: String? = null,
    val title: String? = null,
    val overview: String? = null,
    val voteAverage: Double = 0.0, //percentage
    val tagline: String? = null,
    val runtime: Int = 0,
    var videoKey: String = ""
){
    // Don't use `localId` because it's not part of the API response.
    // And will be generated by Room.
    override fun hashCode(): Int {
        var result = page
        result = 31 * result + apiId
        result = 31 * result + (originalTitle?.hashCode() ?: 0)
        result = 31 * result + (releaseDate?.hashCode() ?: 0)
        result = 31 * result + (posterPath?.hashCode() ?: 0)
        result = 31 * result + (title?.hashCode() ?: 0)
        result = 31 * result + (overview?.hashCode() ?: 0)
        result = 31 * result + voteAverage.hashCode()
        result = 31 * result + (tagline?.hashCode() ?: 0)
        result = 31 * result + runtime
        result = 31 * result + videoKey.hashCode()
        return result
    }

    // Don't use `localId` because it's not part of the API response.
    // And will be generated by Room.
    // Comparing all the other fields is enough to determine if two MovieEntity
    // objects represent the same movie from the API.
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (other !is MovieEntity) return false

        return apiId == other.apiId && page == other.page && originalTitle == other.originalTitle && releaseDate == other.releaseDate && posterPath == other.posterPath && title == other.title && overview == other.overview && voteAverage.equals(other.voteAverage) && tagline == other.tagline && runtime == other.runtime && videoKey == other.videoKey
    }
}
